"""
1. 문제 읽기: 
2. 문제 풀기
10, 20, 40

pass1       pass2
10 + 20     30 + 40 = 100
calc order
10 + 20 + 30 + 40 = 100
10 + 40     50 + 20 = 50+70 = 120
4
10 20 30 40 
10 + 20 +30 + 60 + 40 
무조건 작은 애들끼리 더하면 좋은 건가? 그런듯. 그냥 그렇게 그리디하게 하면 될듯
내가 문제를 이해를 못한 거 같다. 10, 20, 30, 40 묶음 카드가 주어졌을 때
이들을 최저 비교로 합치는 방법은!
일단. 
3. 수도 코드
4. 코드 구현
"""

import sys, heapq
h = []
heapq.heapify(h)
n = int(sys.stdin.readline().strip())
for _ in range(n):
    heapq.heappush(h, int(sys.stdin.readline().strip()))
cnt = n
cost = 0
while cnt > 1:
    tmp = heapq.heappop(h) + heapq.heappop(h)
    heapq.heappush(h, tmp)
    cost += tmp
    cnt -= 1
    
# print(ans)
print(cost)

"""
이슈: 오답

Phase1.
환경: 파이썬
로그: 틀렸습니다.
최근 변경 사항: 힙으로 그리디하게 최소 더하기 연산을 하는 코드 작성.

Phase2.
확인: 틀린 테스트 케이스가 존재한다는 의미. 2프로에서 틀렸으므로 금방 찾을 수 있고,
코드에 중대한 논리적 오류가 있음을 시사.
5
10
20
30
40
50
340

10 + 20 = 30
30 + 30 = 60
60 + 40 = 100
100 + 50 = 150
30 + 60 + 100 + 150
이런 느낌..이면 딱히 틀릴 건 없는데. 10분 더 생각해보고 패스합시다.
카드 개수가 1이면 섞을 일 없이 0이 나오니 그것도 정상.

10
20
40
50

10 + 20 = 30
30 + 40 = 70
70 + 50 = 120
아 여기서 110 나와야 되는데, ans2가 잘못 가산되는 건가.
그냥 내가 문제를 이해 못한 거 같다.
시도: 
분석: 
"""