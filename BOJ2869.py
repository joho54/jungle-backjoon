# 올라가고 미끄러지고 올라가고 미끄러지고. 미끄러지기 전의 높이를 알면 되는 건데. 그 값의 바운더리가 결국 거기서 거기일 거임. 
# 즉 정답이 나올 수 있는 경우가 항상 '올라가고' 나서임. 
# 그러면 결국 정답은 ((올라간 거리 - 내려간 거리) * 걸린 날수) + 올라간 거리 >= 목표 높이 가 되는 최소 값을 찾는 것. 
# 그리고 부등식 좌변 값에서 n >= (목표 높이 - 올라간 거리) / (올라간 거리-내려간 거리)
# 어디가 잘못된 거지?논리적으로는 그다지 문제 없는데 . 아 나누기 했는데 맞춰 떨어진 경우는 +1 하면 안 되는데 무조건 +1이라 그런듯
# 근데 부등식이잖아. 값은 부등식이니까. n은 어떻게 구해야 하는데? 
# 다른게 아니라 캐스팅 문제네. ㅇㅇ 올림 문제 해결하니 바로 해결. 이게 부등호 들어가는 문제에서는 캐스팅을 생각 안 할수 없음.

import math
a, b, v = tuple(map(int, input().split()))
print(math.ceil((v - a)/(a-b))+1)
